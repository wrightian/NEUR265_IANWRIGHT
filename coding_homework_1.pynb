{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/wrightian/NEUR265_IANWRIGHT/blob/main/coding_homework_1.pynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Coding Homework #1\n",
        "\n",
        "**Instructions** (Note: it is very important you follow these instructions in order!)\n",
        "\n",
        "1. Run the first *Code Cell* below.\n",
        "\n",
        "2. Make a *Markdown Cell* that contains the following information:\n",
        "  * Your name (small header)\n",
        "  * The name of this class (italicized)\n",
        "  * The date (bolded)\n",
        "\n",
        "3. **Important!**: For each *Code Cell* that you create, make at least one line of code with a `#` in front of it that describes what your code does.\n",
        "\n",
        "4. Make a *Code Cell* that turns `v_rest1.csv` into a `Pandas DataFrame` called `pandas_data1`, and `v_rest2.csv` into a `Pandas DataFrame` called `pandas_data2`. Recall that we covered how to import `.csv` files as `Pandas DataFrames` in our in-class coding activity on January 30th. \n",
        "\n",
        "5. Make a *Code Cell* that converts `pandas_data1` into a `list` variable called `data1`, and converts `pandas_data2` into a `list` variable called `data2`. The following syntax is an example of how to do this:\n",
        "\n",
        "\n",
        "```\n",
        "data1 = pandas_data1.values.tolist()\n",
        "```\n",
        "\n",
        "6. When you convert a `Pandas DataFrame` into a `list`, it brackets each individual element - we don't want that! To get around this issue, make a *Code Cell* that flattens `data1` and `data2` using the `numpy.squeeze()` function. Your first *Code Cell* imported the `NumPy` module as `np`, so we can use the following code to flatten `data1`:\n",
        "\n",
        "\n",
        "```\n",
        "data1 = np.squeeze(data1)\n",
        "```\n",
        "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Repeat this for `data2`.\n",
        "\n",
        "7. Make a *Code Cell* that prints the length of `data1`.\n",
        "\n",
        "8. Make a *Code Cell* that prints the 5th, 6th, 7th, and 8th elements of `data2`.\n",
        "\n",
        "9. Make a *Code Cell* that prints the second-to-last and last elements of `data1` (use negative indexing).\n",
        "\n",
        "10. Make a *Code Cell* that prints the `type` of `data2` by using the `type` function.\n",
        "\n",
        "11. The first *Code Cell* you ran imports a module called `matplotlib`. In a new *Code Cell*, use `matplotlib` to make a histogram of `data1`. You can use the syntax `plt.hist()` to do this (remember that the variable you are applying the function to goes inside of the parentheses). \n",
        "\n",
        "12. In a new *Code Cell*, re-make your histogram and use the `plt.xlabel()` and `plt.ylabel()` functions to label your axes.\n",
        "\n",
        "13. In a new *Code Cell*, follow the instructions in steps 11 and 12 to make another histogram with axis labels for `data2`. \n",
        "\n",
        "14. In a new *Markdown Cell*, write a brief description of any differences that you observe between your two histograms. Does one group of cells seem to have a higher/lower resting membrane potential than the other group of cells?\n",
        "\n",
        "15. In a new *Code Cell*, create a new variable called `data3`. Let `data3` be a list containing both `data1` and `data2`. \n",
        "\n",
        "16. Make a *Code Cell* that prints the last element of `data2`. You must index `data3` to do this (hint: we covered this in our in-class coding activity on February 1st).\n",
        "\n",
        "17. Save a copy of this notebook to your GitHub repo with the title \"coding_homework_1.pynb\". "
      ],
      "metadata": {
        "id": "R8xCV2iP1KZ_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ian Wright\n",
        "*NEUR265*\n",
        "**02/10/2023**"
      ],
      "metadata": {
        "id": "mmP2TxNfz1yi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Import matplotlib, pandas, and numpy\n",
        "\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "import pandas as pd\n",
        "\n",
        "import numpy as np\n",
        "\n",
        "#This code cell imports the neccesary files and then displays a few specific units from the data set.\n",
        "\n",
        "url = 'https://raw.githubusercontent.com/wrightian/NEUR265_IANWRIGHT/main/vrest_1.csv'\n",
        "pandas_data1 = pd.read_csv(url)\n",
        "url2 = 'https://raw.githubusercontent.com/wrightian/NEUR265_IANWRIGHT/main/vrest_2.csv'\n",
        "pandas_data2 = pd.read_csv(url2)\n",
        "\n",
        "#Importing the data from the csv files\n",
        "\n",
        "data1 = pandas_data1.values.tolist()\n",
        "data2 = pandas_data1.values.tolist()\n",
        "data1 = np.squeeze(data1)\n",
        "data2 = np.squeeze(data2)\n",
        "len(data1)\n",
        "len(data2[4:9])\n",
        "len(data1[:-1])\n",
        "print(type(data2))"
      ],
      "metadata": {
        "id": "48IPWJIt59-Y",
        "outputId": "d71db61c-5e03-4a33-cda7-8c4e210a0bc5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'numpy.ndarray'>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.hist(data1)\n",
        "\n",
        "#Printing a histogram of the first data"
      ],
      "metadata": {
        "id": "ANCVvxRr5AZh",
        "outputId": "d21ca325-75e6-49fe-cb0d-ac07844a85b4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 354
        }
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([3., 0., 1., 1., 4., 0., 1., 0., 1., 1.]),\n",
              " array([-80.73611069, -78.67901226, -76.62191383, -74.5648154 ,\n",
              "        -72.50771697, -70.45061854, -68.3935201 , -66.33642167,\n",
              "        -64.27932324, -62.22222481, -60.16512638]),\n",
              " <a list of 10 Patch objects>)"
            ]
          },
          "metadata": {},
          "execution_count": 37
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.hist(data1)\n",
        "plt.xlabel(data1)\n",
        "plt.ylabel(data1)\n",
        "\n",
        "#Printing a histogram of the first data with axis labeled"
      ],
      "metadata": {
        "id": "usErYi4k6FdG",
        "outputId": "c7194230-3d5d-4021-f8bd-36422bdcd6b3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        }
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, '[-66.95983696 -79.89145279 -62.71978283 -72.26913706 -70.7188908\\n -70.4764719  -72.84431267 -80.73611069 -72.13991165 -75.71680603\\n -78.87340864 -60.16512638]')"
            ]
          },
          "metadata": {},
          "execution_count": 46
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.hist(data2)\n",
        "plt.xlabel(data2)\n",
        "plt.ylabel(data2)\n",
        "\n",
        "#Printing a histogram of the second data with axis labeled"
      ],
      "metadata": {
        "id": "zS-nWLfU6w-B",
        "outputId": "dfe0de31-2849-411b-ca87-51c334f6ef05",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 485
        }
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/matplotlib/text.py:1165: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison\n",
            "  if s != self._text:\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, '[-66.95983696 -79.89145279 -62.71978283 -72.26913706 -70.7188908\\n -70.4764719  -72.84431267 -80.73611069 -72.13991165 -75.71680603\\n -78.87340864 -60.16512638]')"
            ]
          },
          "metadata": {},
          "execution_count": 47
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "There is no notable difference between the two histograms"
      ],
      "metadata": {
        "id": "dq36TeN98xkl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data3 = list(data1), list(data2)\n",
        "print(data3[:13])\n",
        "\n",
        "#Combining data 1 and data 2 into data 3 and printing a specific set of numbers from the set."
      ],
      "metadata": {
        "id": "r-Ju2TfA67MS",
        "outputId": "b7f3b45d-9649-42fb-ffbf-47f172be9fcb",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "([-66.95983696, -79.89145279, -62.71978283, -72.26913706, -70.7188908, -70.4764719, -72.84431267, -80.73611069, -72.13991165, -75.71680603, -78.87340864, -60.16512638], [-66.95983696, -79.89145279, -62.71978283, -72.26913706, -70.7188908, -70.4764719, -72.84431267, -80.73611069, -72.13991165, -75.71680603, -78.87340864, -60.16512638])\n"
          ]
        }
      ]
    }
  ]
}